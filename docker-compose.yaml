---

services:
  router:
    image: traefik:v3.1.3
    container_name: router
    restart: on-failure
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/conf/traefik.yml:/etc/traefik/traefik.yml
      - ./traefik/certs/cert.pem:/etc/traefik/cert.pem
      - ./traefik/certs/key.pem:/etc/traefik/key.pem
      - ./traefik/custom:/etc/traefik/custom
#      - ./auth/k8s.crt:/k8s.crt
    environment:
      - KUBECONFIG=k8s.crt
    # extra_hosts:
    #   kubernetes.default: 127.0.0.1
    labels:
      - traefik.enable=true
      - traefik.http.routers.router.rule=Host(`router${SHARED_DOMAIN_SEGMENT}.docker`)
      - traefik.http.routers.router.entrypoints=websecure
      - traefik.http.services.router.loadbalancer.server.port=8080
      - traefik.http.routers.router.tls=true
      - traefik.http.routers.router.service=router
    healthcheck:
      test: ['CMD-SHELL', 'traefik healthcheck --ping']
      interval: 4s
      timeout: 4s
      retries: 8
      start_period: 4s

  ui:
    image: portainer/portainer-ce:2.20.3-alpine
    container_name: ui
    restart: on-failure
    # ports:
    #   - '9000'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ui_data:/data
    command: '-H unix:///var/run/docker.sock --admin-password="$$2y$$05$$CNG2.g4xVC0NRnpBq9m2jOgcDsHc8Q3V02bz4t/6xYjYzgT4jFd/K"'
    labels:
      - traefik.enable=true
      - traefik.http.routers.ui.rule=Host(`ui${SHARED_DOMAIN_SEGMENT}.docker`)
      - traefik.http.routers.ui.entrypoints=websecure
      - traefik.http.services.ui.loadbalancer.server.port=9000
      - traefik.http.routers.ui.tls=true
    healthcheck:
      test: 'wget -q --no-verbose --tries=3 --spider --no-check-certificate http://127.0.0.1:9000/api/system/status || exit 1'
      interval: 4s
      timeout: 4s
      retries: 8
      start_period: 4s

  dns:
    image: drpsychick/dnsmasq:latest
    container_name: dnsmasq
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - '53:53/tcp'
      - '53:53/udp'
    cap_add:
      - NET_ADMIN
    healthcheck:
      test: ['CMD-SHELL', 'nslookup localhost 127.0.0.1 || exit 1']
      interval: 4s
      timeout: 4s
      retries: 8
      start_period: 4s

  registry:
    restart: always
    image: registry:latest
    container_name: registry
    environment:
      REGISTRY_STORAGE_DELETE_ENABLED: true
    #   REGISTRY_AUTH: htpasswd
    #   REGISTRY_AUTH_HTPASSWD_REALM: Registry Realm
    #   REGISTRY_AUTH_HTPASSWD_PATH: /basic.auth
    volumes:
      - registry_data:/var/lib/registry
    #   - ./auth/basic.auth:/basic.auth
    # ports:
    #   - "5000:5000"
    labels:
      - traefik.enable=true
      - traefik.http.routers.registry.rule=Host(`registry${SHARED_DOMAIN_SEGMENT}.docker`)
      - traefik.http.routers.registry.entrypoints=websecure
      - traefik.http.routers.registry.tls=true
      - traefik.http.routers.registry.service=registry
      - traefik.http.services.registry.loadbalancer.server.port=5000
      - traefik.http.routers.registry.middlewares=registry-auth
      - traefik.http.middlewares.registry-auth.basicAuth.users=voale:$$2y$$05$$ruYpinT9Tao0fcYQ3jN8v.CuTOEL52Olz0cqSY9Qf50R7UVBjQ1ka

      # # You can remove the line below to make accessible publicly
      # - traefik.http.middlewares.private-network.ipwhitelist.sourcerange=comma,delimited,ips,here,to,allow
      # # You can remove the line below to make accessible publicly
      # - traefik.http.routers.registry.middlewares=private-network@docker
  registryui:
    image: joxit/docker-registry-ui:2.5.7-debian
    container_name: registryui
    environment:
      - REGISTRY_TITLE=My Container Registry
      - NGINX_PROXY_PASS_URL=http://registry:5000
      - DELETE_IMAGES=true
      # - REGISTRY_URL=http://registry:5000
    labels:
      - traefik.enable=true
      - traefik.http.routers.registryui.rule=Host(`registry-ui${SHARED_DOMAIN_SEGMENT}.docker`)
      - traefik.http.routers.registryui.entrypoints=websecure
      - traefik.http.routers.registryui.tls=true
      - traefik.http.routers.registryui.service=registryui
      - traefik.http.services.registryui.loadbalancer.server.port=80
      - traefik.http.services.registryui.loadbalancer.passhostheader=true
      - traefik.http.routers.registryui.middlewares=registryui-auth
      - traefik.http.middlewares.registryui-auth.basicAuth.users=voale:$$2y$$05$$WbRA8FbGQup57kmFaTIhvusr39nVysUi3DVF/ym6rvdOxXPfSs5o2

networks:
  default:
    name: network.${COMPOSE_PROJECT_NAME}
    ipam:
      config:
        - subnet: 172.100.61.0/24

volumes:
  ui_data:
  registry_data:

...
